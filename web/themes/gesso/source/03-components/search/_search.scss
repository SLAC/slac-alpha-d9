// @file
// Component: c-search
@use '00-config' as *;

.c-search {
  align-self: flex-end;
  bottom: 100%;
  position: absolute;
  right: gesso-site-margins(desktop);
  z-index: 1;

  .is-sticky & {
    margin-left: rem(gesso-spacing(2));
    position: static;
  }

  .contextual-region & {
    right: 0;
  }

  &.c-search--in-page {
    position: static;
  }

  @include breakpoint-max(gesso-breakpoint(mobile-menu)) {
    display: none;

    &.c-search--in-page {
      display: block;
    }
  }
}

.c-search__form {
  --gesso-search-font-size: #{rem(gesso-font-size(3))};

  .c-search--in-page & {
    padding-block: 0 rem(gesso-spacing(5));
  }

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    @include layout-full-bleed;
    --gesso-search-font-size: #{rem(gesso-font-size(9))};
    background-color: gesso-color(background, mega-menu);
    border-top: 1px solid rgba(#2e2929, 0.3);
    bottom: 100%;
    box-shadow: gesso-box-shadow(1);
    padding: rem(gesso-spacing(10)) 0 rem(gesso-spacing(6));
    position: fixed;
    transform: translate3d(
      0,
      calc(100% + var(--gesso-header-current-height)),
      0
    );

    .c-search--in-page & {
      @include layout-undo-full-bleed;
      --gesso-search-font-size: #{rem(gesso-font-size(7))};
      border-top: 0;
      box-shadow: none;
      max-width: gesso-constrain(sm);
      padding: rem(gesso-spacing(5)) 0;
      position: relative;
      transform: none;
    }
  }
}

.c-search__inner {
  position: relative;

  .c-form-item {
    margin-bottom: 0;
  }
}

.c-search__input {
  @include focus();
  border: 1px solid gesso-grayscale(black);
  border-radius: 4px;
  box-shadow: none;
  font-size: var(--gesso-search-font-size);
  font-weight: gesso-font-weight(light);
  height: auto;
  line-height: gesso-line-height(base);
  padding: rem(gesso-spacing(1)) rem(gesso-spacing(1.5));
  width: 100%;

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    padding-block: rem(gesso-spacing(0.5));
  }
}

.c-search__button,
.c-search__submit {
  @include text-button;

  &:hover {
    color: gesso-color(text, link-hover);
  }
}

.c-search__button {
  z-index: 4;

  .has-inverse-nav & {
    color: gesso-color(text, on-dark);
  }

  .has-open-menu & {
    color: gesso-color(text, link);
  }
}

.c-search__submit {
  color: var(--gesso-text-color);
  font-size: calc(var(--gesso-search-font-size));
  margin-bottom: 0;
  position: absolute;
  right: calc(#{rem(gesso-spacing(1.5))} + 1px);
  top: calc(#{rem(gesso-spacing(1))} + 1px);

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    font-size: calc(var(--gesso-search-font-size) - 0.5rem);
    top: calc(#{rem(gesso-spacing(0.5))} + 1px + 0.25rem);

    .c-search--in-page & {
      top: calc(#{rem(gesso-spacing(0.5))} + 1px + 0.375rem);
    }
  }
}

.c-search__fieldset {
  display: flex;
  flex-flow: wrap;
  font-size: rem(gesso-font-size(1));
  gap: rem(gesso-spacing(1));
  padding: rem(gesso-spacing(2.5)) 0;

  input {
    height: 1em;
    vertical-align: middle;
    width: 1em;
  }

  label {
    display: inline-block;
    vertical-align: middle;
  }

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    flex-flow: nowrap;
    font-size: rem(gesso-font-size(3));
    gap: rem(gesso-spacing(2.5));

    .c-icon {
      color: gesso-color(ui, generic, accent);
    }

    label {
      font-weight: gesso-font-weight(bold);
    }
  }
}

.c-search__links {
  display: none;

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    border-top: 1px solid gesso-color(ui, generic, border);
    margin-top: rem(gesso-spacing(8));
    padding-top: rem(gesso-spacing(2.5));
    // stylelint-disable selector-class-pattern
    &,
    .site_setting_entity span {
      display: flex;
      justify-content: space-between;
    }

    .site_setting_entity {
      width: 100%;
    }
    // stylelint-enable selector-class-pattern

    a {
      text-decoration-color: currentColor;
      text-decoration-thickness: 1px;
    }

    .c-icon {
      color: inherit;
    }
  }
}
