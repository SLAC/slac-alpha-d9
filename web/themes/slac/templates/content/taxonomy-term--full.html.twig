{#
/**
 * @file
 * Theme override to display a taxonomy term.
 *
 * Available variables:
 * - url: URL of the current term.
 * - name: (optional) Name of the current term.
 * - content: Items for the content of the term (fields and description).
 *   Use 'content' to print them all, or print a subset such as
 *   'content.description'. Use the following code to exclude the
 *   printing of a given child element:
 *   @code
 *   {{ content|without('description') }}
 *   @endcode
 * - attributes: HTML attributes for the wrapper.
 * - page: Flag for the full page state.
 * - term: The taxonomy term entity, including:
 *   - id: The ID of the taxonomy term.
 *   - bundle: Machine name of the current vocabulary.
 * - view_mode: View mode, e.g. 'full', 'teaser', etc.
 *
 * @see template_preprocess_taxonomy_term()
 */
#}
{% set classes = [
  not term.isPublished() ? 'is-unpublished',
] %}

{% set attributes = attributes.addClass(classes) %}

{% set admin_info %}
  {{ region_status }}
{% endset %}

{% set show_admin_info = false %}

{% if admin_info|striptags('<drupal-render-placeholder>')|trim %}
  {% set show_admin_info = true %}
{% endif %}

{% set description %}
  {% include '@components/wysiwyg/wysiwyg.twig' with {
    content: content.description|field_value,
  } %}
{% endset %}

{% set term_content %}
  {% include '@layouts/section/section.twig' with {
    'section_content': description,
    'has_constrain': true,
    'modifier_classes': 'l-section--white l-section--no-padding',
  } %}
  {% include '@layouts/section/section.twig' with {
    'section_content': content|without("description", "field_lede", "field_display_name"),
    'has_constrain': true,
    'modifier_classes': 'l-section--white',
  } %}
  {% include '@layouts/section/section.twig' with {
    'section_title': 'Related Content'|t,
    'section_content': drupal_view('taxonomy_term', 'default', term.tid.value),
    'has_constrain': true,
    'modifier_classes': 'l-section--white',
  } %}
{% endset %}

{% include '@components/article/article.twig' with {
  'title': term.hasField('field_display_name') ? content.field_display_name|field_value : name,
  'show_admin_info': show_admin_info,
  'lede': term.hasField('field_lede') ? content.field_lede|field_value : null,
  'admin_info': admin_info,
  'show_footer': false,
  'date': null,
  'rdf_metadata': metadata,
  'content': term_content,
} %}

{# Uncomment the following if you donâ€™t render the content variable. #}
{# {% set catch_cache = content|render %} #}
