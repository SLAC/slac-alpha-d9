// @file
// Component: c-search
@use '00-config' as *;

.c-search {
  align-self: flex-end;
  bottom: 100%;
  position: absolute;
  right: gesso-site-margins(desktop);
  z-index: 1;

  .is-sticky & {
    top: 0;
  }

  .contextual-region & {
    right: 0;
  }

  &.c-search--in-page {
    position: static;
  }

  @include breakpoint-max(gesso-breakpoint(mobile-menu)) {
    display: none;

    &.c-search--in-page {
      display: block;
    }
  }
}

.c-search__form {
  --gesso-search-font-size: #{rem(gesso-font-size(3))};

  .c-search--in-page & {
    padding-block: gesso-spacing(5);
  }

  .c-search--in-page.has-current-search & {
    padding-bottom: gesso-spacing(2);
  }

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    --gesso-search-font-size: #{rem(gesso-font-size(9))};
    background-color: gesso-color(background, dropdown-menu);

    .c-search--dropdown & {
      @include layout-full-bleed;
      border-top: 1px solid rgba(#2e2929, 0.3);
      bottom: 100%;
      box-shadow: gesso-box-shadow(1);
      color: gesso-color(text, link);
      margin-bottom: 0;
      margin-top: 0;
      max-height: calc(
        100vh - var(--gesso-header-current-height) -
          var(--ginToolbarHeight, 0px)
      );
      opacity: 1;
      overflow-wrap: normal;
      overflow-y: auto;
      padding: rem(gesso-spacing(10)) 0 rem(gesso-spacing(6));
      position: fixed;
      transform: translate3d(
        0,
        calc(100% + var(--gesso-header-current-height)),
        0
      );
      transition: opacity gesso-duration(long) gesso-easing(ease-in-out);
      z-index: gesso-z-index(social-share) + 1;

      .is-sticky & {
        max-height: calc(
          100vh - var(--gesso-header-current-height) -
            var(--ginToolbarHeight, 0px)
        );
        transform: translate3d(
          0,
          calc(
            100% + var(--gesso-header-current-height) +
              var(--ginToolbarHeight, 0px)
          ),
          0
        );
      }

      &[hidden] {
        box-shadow: none;
        display: block;
        opacity: 0;
        transform: translate3d(
          0,
          calc(
            0 - var(--gesso-header-current-height) -
              var(--ginToolbarHeight, 0px) -
              var(--ginToolbarSecondaryHeight, 0px)
          ),
          0
        );
        transition: opacity gesso-duration(long) gesso-easing(ease-in-out),
          transform 0s gesso-duration(long);
        z-index: -1;

        .is-sticky & {
          transform: translate3d(
            0,
            calc(
              0 - var(--gesso-header-current-height) -
                var(--ginToolbarHeight, 0px)
            ),
            0
          );
        }
      }
    }

    .c-search--in-page & {
      --gesso-search-font-size: #{rem(24px)};
      max-width: gesso-constrain(sm);
      padding: gesso-spacing(9) 0;
      position: relative;
    }

    .c-search--in-page.has-current-search & {
      padding-bottom: gesso-spacing(4);
    }
  }
}

.c-search__inner {
  position: relative;

  .c-form-item {
    margin-bottom: 0;
  }
}

.c-search__input {
  @include focus();
  border: 1px solid gesso-grayscale(black);
  border-radius: 4px;
  box-shadow: none;
  font-size: var(--gesso-search-font-size);
  font-weight: gesso-font-weight(light);
  height: auto;
  line-height: gesso-line-height(base);
  padding: rem(gesso-spacing(1)) rem(gesso-spacing(1.5));
  width: 100%;

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    padding-block: rem(gesso-spacing(0.5));
  }
}

.c-search__button,
.c-search__submit {
  @include text-button;

  &:hover {
    color: var(--gesso-link-hover-color);
  }
}

.c-search__button {
  color: var(--gesso-link-color);
  z-index: 4;
}

.c-search__submit {
  font-size: calc(var(--gesso-search-font-size));
  margin-bottom: 0;
  position: absolute;
  right: calc(#{rem(gesso-spacing(1.5))} + 1px);
  top: calc(#{rem(gesso-spacing(1))} + 1px);

  .c-search--in-page & {
    top: calc(#{gesso-spacing(5)} + 1px + 0.25rem);
  }

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    font-size: calc(var(--gesso-search-font-size) - 0.5rem);
    top: calc(#{rem(gesso-spacing(0.5))} + 1px + 0.25rem);

    .c-search--in-page & {
      font-size: calc(var(--gesso-search-font-size));
      top: calc(#{gesso-spacing(9)} + 1px + 0.25rem);
    }
  }
}

.c-search__fieldset {
  display: flex;
  flex-flow: wrap;
  font-size: rem(gesso-font-size(1));
  gap: rem(gesso-spacing(1));
  padding: rem(gesso-spacing(2.5)) 0;

  input {
    height: 1em;
    vertical-align: middle;
    width: 1em;
  }

  label {
    display: inline-block;
    vertical-align: middle;
  }

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    flex-flow: nowrap;
    font-size: rem(gesso-font-size(3));
    gap: rem(gesso-spacing(2.5));

    .c-icon {
      color: gesso-color(ui, generic, accent);
    }

    label {
      font-weight: gesso-font-weight(bold);
    }
  }
}

.c-search__form-close {
  @include text-button;
  height: rem(50px);
  position: absolute;
  right: rem(10px);
  text-align: center;
  top: rem(10px);
  transition: opacity gesso-duration(short) gesso-easing(ease-in);
  width: rem(50px);

  &:hover {
    color: gesso-color(text, link-hover);
  }

  @include breakpoint-max(gesso-breakpoint(mobile-menu)) {
    display: none;
  }
}

.c-search__current-search {
  @include responsive-font-size(4);
  margin-bottom: gesso-spacing(2);

  @include breakpoint(gesso-breakpoint(mobile-menu) + 1px) {
    margin-bottom: gesso-spacing(4);
  }
}
